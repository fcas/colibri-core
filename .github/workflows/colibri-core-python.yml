name: Python CI

on:
  push:
    paths:
      - 'src/*'
      - 'include/*'
      - '*.py'
      - '*.pyx'
      - '*.pxd'
      - '.github/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        compiler: [g++]

    steps:
      - uses: actions/checkout@v2
      - name: Install Build Environment
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install pkg-config autoconf-archive
             fi

      - name: Install Dependencies
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install python3 cython3 python3-pip python3-wheel libbz2-dev
             fi

      - name: Build and install Colibri-Core library
        env:
          CXX:  ${{ matrix.compiler }}
        run: |
          autoreconf -i && ./configure && make && sudo make install

      - name: Build and install Colibri-Core python bniding
        env:
          CXX:  ${{ matrix.compiler }}
        run: |
          pip install .

      - name: Test
        env:
          CXX:  ${{ matrix.compiler }}
        run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib python test.py

      - name: Test patternmodeller
        env:
          CXX:  ${{ matrix.compiler }}
        run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib cd exp && ./colibri-patternmodeller-test.sh

